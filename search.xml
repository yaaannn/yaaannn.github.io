<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Markdown简明手册(持续更新)</title>
      <link href="2021/01/23/markdown/"/>
      <url>2021/01/23/markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="关于-Markdown"><a href="#关于-Markdown" class="headerlink" title="关于 Markdown"></a>关于 Markdown</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p><a href="http://zh.wikipedia.org/wiki/Markdown" title="Wiki: Markdown">Wiki: Markdown</a></p><blockquote><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p></blockquote><h3 id="为什么选择-Markdown"><a href="#为什么选择-Markdown" class="headerlink" title="为什么选择 Markdown"></a>为什么选择 Markdown</h3><ul><li>它基于纯文本，方便修改和共享；</li><li>几乎可以在所有的文本编辑器中编写；</li><li>有众多编程语言的实现，以及应用的相关扩展；</li><li>在 <a href="https://github.com/">GitHub</a> 等网站中有很好的应用；</li><li>很容易转换为 HTML 文档或其他格式；</li><li>适合用来编写文档、记录笔记、撰写文章。</li></ul><h3 id="兼容-HTML"><a href="#兼容-HTML" class="headerlink" title="兼容 HTML"></a>兼容 HTML</h3><p>Markdown 完全兼容 HTML 语法，可以直接在 Markdown 文档中插入 HTML 内容：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>这段代码会变成下面的样子：</p><table>  <tr>    <td>1</td>    <td>2</td>  </tr>  <tr>    <td>3</td>    <td>4</td>  </tr></table><h3 id="第一个-Markdown-文档"><a href="#第一个-Markdown-文档" class="headerlink" title="第一个 Markdown 文档"></a>第一个 Markdown 文档</h3><p>Hello.md</p><p>打开你熟悉的文本编辑器（如 <a href="https://code.visualstudio.com/">Visual Studio Code</a>），新建一个 ‘hello.md’ 文件，写入下面的内容，并保存：</p><pre class=" language-markdown"><code class="language-markdown">Hello</code></pre><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="段落与换行"><a href="#段落与换行" class="headerlink" title="段落与换行"></a>段落与换行</h3><p>1. 段落的前后必须是空行：</p><p>空行指的是行内什么都没有，或者只有空白符（空格或制表符）</p><p>相邻两行文本，如果中间没有空行<br>会显示在一行中（换行符被转换为空格）</p><p>2. 如果需要在段落内加入换行（<code>&lt;br&gt;</code>）：</p><p>可以在前一行的末尾加入至少两个空格<br>然后换行写其它的文字</p><p>3. Markdown 中的多数区块都需要在两个空行之间。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><h4 id="1-Setext-形式"><a href="#1-Setext-形式" class="headerlink" title="1. Setext 形式"></a>1. Setext 形式</h4><pre class=" language-markdown"><code class="language-markdown"><span class="token title important">H1<span class="token punctuation">====</span></span><span class="token title important">H2<span class="token punctuation">---</span></span></code></pre><blockquote><p><code>=</code> 和 <code>-</code> 的数量是没有限制的。通常的做法是使其和标题文本的长度相同，这样看起来比较舒服。或者可以像我一样，用四个 <code>-</code> 或 <code>=</code>。<br>Setext 形式只支持 <code>h1</code> 和 <code>h2</code> 两种标题。</p></blockquote><h4 id="2-atx-形式"><a href="#2-atx-形式" class="headerlink" title="2. atx 形式"></a>2. atx 形式</h4><p>可以用 <code>#</code> 包括文本：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">####</span> H4</span><span class="token title important"><span class="token punctuation">#####</span> H5</span></code></pre><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><h3 id="1-引用内容"><a href="#1-引用内容" class="headerlink" title="1. 引用内容"></a>1. 引用内容</h3><p>在段落或其他内容前使用 <code>&gt;</code> 符号，就可以将这段内容标记为 ‘引用’ 的内容（<code>&lt;blockquote&gt;</code>）：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>引用内容</code></pre><blockquote><p>引用内容</p></blockquote><h3 id="2-多行引用"><a href="#2-多行引用" class="headerlink" title="2. 多行引用"></a>2. 多行引用</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>多行引用<span class="token blockquote punctuation">></span>可以在每行前加 <span class="token code keyword">`>`</span></code></pre><blockquote><p>多行引用<br>可以在每行前加 <code>&gt;</code></p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>如果仅在第一行使用 <span class="token code keyword">`>`</span>，后面相邻的行即使省略 <span class="token code keyword">`>`</span>，也会变成引用内容</code></pre><blockquote><p>如果仅在第一行使用 <code>&gt;</code>，<br>后面相邻的行即使省略 <code>&gt;</code>，也会变成引用内容</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>如果引用内容需要换行，  <span class="token blockquote punctuation">></span>可以在行尾添加两个空格<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span>或者在引用内容中加一个空行</code></pre><blockquote><p>如果引用内容需要换行，<br>可以在行尾添加两个空格</p><p>或者在引用内容中加一个空行</p></blockquote><h3 id="3-嵌套引用"><a href="#3-嵌套引用" class="headerlink" title="3. 嵌套引用"></a>3. 嵌套引用</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>也可以在引用中<span class="token blockquote punctuation">>></span>使用嵌套的引用</code></pre><blockquote><p>也可以在引用中</p><blockquote><p>使用嵌套的引用</p></blockquote></blockquote><h3 id="4-其他-Markdown"><a href="#4-其他-Markdown" class="headerlink" title="4. 其他 Markdown"></a>4. 其他 Markdown</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>在引用中可以使用使用其他任何 <span class="token italic"><span class="token punctuation">*</span>Markdown<span class="token punctuation">*</span></span> 语法</code></pre><blockquote><p>在引用中可以使用使用其他任何 <em>Markdown</em> 语法</p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 可以使用 <span class="token code keyword">`*`</span> 作为标记<span class="token list punctuation">+</span> 也可以使用 <span class="token code keyword">`+`</span><span class="token list punctuation">-</span> 或者 <span class="token code keyword">`-`</span></code></pre><ul><li>可以使用 <code>*</code> 作为标记</li></ul><ul><li>也可以使用 <code>+</code></li></ul><ul><li>或者 <code>-</code></li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 有序列表以数字和 <span class="token code keyword">`.`</span> 开始；<span class="token list punctuation">3.</span> 数字的序列并不会影响生成的列表序列；<span class="token list punctuation">4.</span> 但仍然推荐按照自然顺序（1.2.3...）编写。</code></pre><ol><li>有序列表以数字和 <code>.</code> 开始；</li><li>数字的序列并不会影响生成的列表序列；</li><li>但仍然推荐按照自然顺序（1.2.3…）编写。</li></ol><h3 id="嵌套的列表"><a href="#嵌套的列表" class="headerlink" title="嵌套的列表"></a>嵌套的列表</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一层  <span class="token list punctuation">+</span> 1-1  <span class="token list punctuation">+</span> 1-2<span class="token list punctuation">2.</span> 无序列表和有序列表可以随意相互嵌套  <span class="token list punctuation">1.</span> 2-1  <span class="token list punctuation">2.</span> 2-2</code></pre><ol><li>第一层</li></ol><ul><li>1-1</li><li>1-2</li></ul><ol start="2"><li>无序列表和有序列表可以随意相互嵌套<br>i. 2-1<br>ii. 2-2</li></ol><h3 id="语法和用法"><a href="#语法和用法" class="headerlink" title="语法和用法"></a>语法和用法</h3><ol><li>无序列表项的开始是：符号 空格；</li><li>有序列表项的开始是：数字 <code>.</code> 空格；</li><li>空格至少为一个，多个空格将被解析为一个；</li><li>如果仅需要在行前显示数字和 <code>.</code>：</li></ol><pre class=" language-markdown"><code class="language-markdown">05\. 可以使用：数字\. 来取消显示为列表,如下</code></pre><p>5. 可以使用：数字\. 来取消显示为列表</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><h4 id="1-缩进"><a href="#1-缩进" class="headerlink" title="1. 缩进"></a>1. 缩进</h4><p>可以使用缩进来插入代码块：</p><pre><code>&lt;html&gt; // Tab开头    &lt;title&gt;Markdown&lt;/title&gt;&lt;/html&gt; // 四个空格开头</code></pre><p>代码块前后需要有至少一个空行，且每行代码前需要有至少一个 Tab 或四个空格；</p><h4 id="2-键"><a href="#2-键" class="headerlink" title="2. ~键"></a>2. <code>~</code>键</h4><ul><li>在需要高亮的代码块的前一行及后一行使用三个反引号 ```（~ 键）</li><li>同时第一行反引号后面，输入代码块所使用的语言，实现代码高亮。</li></ul><pre class=" language-c"><code class="language-c">    <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello Markdown"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></code></pre><h3 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h3><p>也可以通过 ``，插入行内代码（` 是 <code>Tab</code> 键上边、数字 <code>1</code> 键左侧的那个按键）：</p><p>例如 <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>1. 可以在一行中使用三个或更多的 <code>*</code>、<code>-</code> 或 <code>_</code> 来添加分隔线（<code>&lt;hr&gt;</code>）：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">------</span><span class="token italic"><span class="token punctuation">_</span><span class="token punctuation">_</span><span class="token punctuation">_</span></span></code></pre><hr><hr><hr><p>2. 多个字符之间可以有空格（空白符），但不能有其他字符：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">* * *</span><span class="token hr punctuation">- - -</span></code></pre><hr><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><h3 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h3><p>格式为 <code>[link text](URL &#39;title text&#39;)</code>。</p><p>① 普通链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Google](http://www.google.com/)</span></code></pre><p><a href="http://www.google.com/">Google</a></p><p>② 指向本地文件的链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[icon.png](./images/icon.png)</span></code></pre><p><a href="./images/icon.png">icon.png</a></p><p>③ 包含 ‘title’ 的链接:</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Google](http://www.google.com/ <span class="token string">"Google"</span>)</span></code></pre><p><a href="http://www.google.com/" title="Google">Google</a></p><blockquote><p>title 使用 ‘ 或 “ 都是可以的。</p></blockquote><h3 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h3><p>参考式链接的写法相当于行内式拆分成两部分，并通过一个 <em>识别符</em> 来连接两部分。参考式能尽量保持文章结构的简单，也方便统一管理 URL。</p><p>① 首先，定义链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Google][<span class="token variable">link</span>]</span></code></pre><p><a href="http://www.google.com/" title="Google">Google</a></p><p>第二个方括号内为链接独有的 <em>识别符</em>，可以是字母、数字、空白或标点符号。识别符是 <em>不区分大小写</em> 的；</p><p>② 然后定义链接内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">link</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.google.com/ <span class="token string">"Google"</span></span></code></pre><p>其格式为：<code>[识别符]: URL &#39;title&#39;</code>。</p><blockquote><p>其中，URL可以使用 &lt;&gt; 包括起来，title 可以使用 “”、’’、() 包括（考虑到兼容性，建议使用引号），title 部分也可以换行来写；</p></blockquote><blockquote><p>链接内容的定义可以放在同一个文件的 <em>任意位置</em>；</p></blockquote><p>③ 也可以省略 <em>识别符</em>，使用链接文本作为 <em>识别符</em>：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[Google][]</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">Google</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://www.google.com/ <span class="token string">"Google"</span></span></code></pre><p>[Google][]<br>[Google]: <a href="http://www.google.com/">http://www.google.com/</a> “Google”</p><blockquote><p>参考式相对于行内式有一个明显的优点，就是可以在多个不同的位置引用同一个 URL。</p></blockquote><h3 id="自动链接"><a href="#自动链接" class="headerlink" title="自动链接"></a>自动链接</h3><p>使用 <code>&lt;&gt;</code> 包括的 URL 或邮箱地址会被自动转换为超链接：</p><pre class=" language-markdown"><code class="language-markdown">&lt;http://www.google.com/>&lt;123@email.com></code></pre><p><a href="http://www.google.com/">http://www.google.com/</a></p><p><a href="mailto:&#49;&#50;&#51;&#x40;&#x65;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;">&#49;&#50;&#51;&#x40;&#x65;&#109;&#x61;&#105;&#108;&#x2e;&#x63;&#111;&#x6d;</a></p><p>该方式适合行内较短的链接，会使用 URL 作为链接文字。邮箱地址会自动编码，以逃避抓取机器人。</p><h2 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h2><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个 <code>!</code>。也分为行内式和参考式两种。</p><h3 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![GitHub](https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png <span class="token string">"GitHub,Social Coding"</span>)</span></code></pre><p><img src="https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png" alt="GitHub" title="GitHub,Social Coding"></p><p>方括号中的部分是图片的替代文本，括号中的 ‘title’ 部分和链接一样，是可选的。</p><h3 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![GitHub][<span class="token variable">github</span>]</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">github</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png <span class="token string">"GitHub,Social Coding"</span></span></code></pre><p><img src="https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png" alt="GitHub" title="GitHub,Social Coding"></p><h3 id="指定图片的显示大小"><a href="#指定图片的显示大小" class="headerlink" title="指定图片的显示大小"></a>指定图片的显示大小</h3><p>Markdown 不支持指定图片的显示大小，不过可以通过直接插入<code>&lt;img /&gt;</code>标签来指定相关属性：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>GitHub,Social Coding<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><img src="https://i.loli.net/2021/01/23/5H2ROo4iP7bBL9w.png" alt="GitHub" title="GitHub,Social Coding" width="50" height="50" /><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>1. 使用 <code>* *</code> 或 <code>_ _</code> 包括的文本会被转换为 <code>&lt;em&gt;&lt;/em&gt;</code> ，通常表现为斜体：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token italic"><span class="token punctuation">*</span>演示<span class="token punctuation">*</span></span> 的 <span class="token italic"><span class="token punctuation">_</span>文本<span class="token punctuation">_</span></span></code></pre><p>这是用来 <em>演示</em> 的 <em>文本</em></p><p>2. 使用 <code>** **</code> 或 <code>__ __</code> 包括的文本会被转换为 <code>&lt;strong&gt;&lt;/strong&gt;</code>，通常表现为加粗：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token bold"><span class="token punctuation">**</span>演示<span class="token punctuation">**</span></span> 的 <span class="token bold"><span class="token punctuation">__</span>文本<span class="token punctuation">__</span></span></code></pre><p>这是用来 <strong>演示</strong> 的 <strong>文本</strong></p><p>3. 用来包括文本的 <code>*</code> 或 <code>_</code> 内侧不能有空白，否则 <code>*</code> 和 <code>_</code> 将不会被转换（不同的实现会有不同的表现）：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token italic"><span class="token punctuation">*</span> 演示<span class="token punctuation">*</span></span> 的 <span class="token italic"><span class="token punctuation">_</span>文本 <span class="token punctuation">_</span></span></code></pre><p>这是用来 * 演示* 的 _文本 _</p><p>4. 如果需要在文本中显示成对的 <code>*</code> 或 <code>_</code>，可以在符号前加入 <code>\</code> 即可：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 \*演示\* 的 \_文本\_</code></pre><p>这是用来 *演示* 的 _文本_</p><p>5. <code>*</code>、<code>**</code>、<code>_</code> 和 <code>__</code> 都必须 <em>成对使用</em> 。</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好</title>
      <link href="2021/01/21/hello-world/"/>
      <url>2021/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello world"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
