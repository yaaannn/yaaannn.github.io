<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>强智教务系统API-getCurrentTime</title>
      <link href="2021/02/03/QZAPI-getCurrentTime/"/>
      <url>2021/02/03/QZAPI-getCurrentTime/</url>
      
        <content type="html"><![CDATA[<p>getCurrentTime用来获取所提交的日期的时间、周次、学年等信息</p><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><pre class=" language-url"><code class="language-url">GET http://jwxt.xxxx.edu.cn/app.do?method=getCurrentTime&currDate=#查询日期</code></pre><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><pre class=" language-json"><code class="language-json">request.header<span class="token punctuation">{</span>    <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">""</span> //运行身份验证authUser时获取到的token，有过期机制    <span class="token punctuation">}</span><span class="token punctuation">,</span>request.data<span class="token punctuation">{</span>    <span class="token property">"method"</span><span class="token operator">:</span> <span class="token string">"getCurrentTime"</span><span class="token punctuation">,</span>  //必填    <span class="token property">"currDate"</span><span class="token operator">:</span>  <span class="token string">""</span> //格式为YYYY-MM-DD，必填，留空调用成功，但返回值均为<span class="token null">null</span><span class="token punctuation">}</span></code></pre><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"s_time"</span><span class="token operator">:</span> <span class="token string">"2021-04-12"</span><span class="token punctuation">,</span> //本周开始时间    <span class="token property">"xnxqh"</span><span class="token operator">:</span> <span class="token string">"2020-2021-2"</span><span class="token punctuation">,</span> //学年学期名称    <span class="token property">"zc"</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span> //当前周次    <span class="token property">"e_time"</span><span class="token operator">:</span> <span class="token string">"2021-04-18"</span> //本周结束时间<span class="token punctuation">}</span></code></pre><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p><img src="https://cdn.jsdelivr.net/gh/yaaannn/blog_img/getCurrentTime%E8%AF%B7%E6%B1%82.png" alt="getCurrentTime请求"></p><p><img src="https://cdn.jsdelivr.net/gh/yaaannn/blog_img/getCurrentTime%E8%BF%94%E5%9B%9E%E5%80%BC.png" alt="getCurrentTime返回值"></p>]]></content>
      
      
      <categories>
          
          <category> 强智教务系统API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 强智 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强智教务系统API-authUser</title>
      <link href="2021/01/29/QZAPI-authUser/"/>
      <url>2021/01/29/QZAPI-authUser/</url>
      
        <content type="html"><![CDATA[<p>authUser为登录方法,用于获取登录状态以及相关信息。</p><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><pre class=" language-url"><code class="language-url">GET　http://jwxt.ahut.edu.cn/app.do?method=authUser&xh=#学号&pwd=#密码</code></pre><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"method"</span><span class="token operator">:</span> <span class="token string">"authUser"</span><span class="token punctuation">,</span>  //必填    <span class="token property">"xh"</span><span class="token operator">:</span> <span class="token string">"登陆教务系统使用的学号"</span><span class="token punctuation">,</span>  //必填    <span class="token property">"pwd"</span><span class="token operator">:</span> <span class="token string">"登陆教务系统需要的密码"</span>  //必填<span class="token punctuation">}</span></code></pre><h2 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h2><h3 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"success"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    //令牌    <span class="token property">"user"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"userdwmc"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> //所在学院        <span class="token property">"scsj"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"sjyzm"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"usertype"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> //学生类型        <span class="token property">"useraccount"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  //用户账户        <span class="token property">"userpasswd"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>   //用户密码        <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">""</span>  //用户名    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"usertype"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>    <span class="token property">"userrealname"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span> //学生真实姓名    <span class="token property">"userdwmc"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">}</span></code></pre><h3 id="登录失败"><a href="#登录失败" class="headerlink" title="登录失败"></a>登录失败</h3><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"success"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"-1"</span><span class="token punctuation">,</span>    <span class="token property">"msg"</span><span class="token operator">:</span> <span class="token string">"密码错误"</span><span class="token punctuation">}</span></code></pre><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><p><img src="https://i.loli.net/2021/01/29/xvjsIThU3zHnD8P.png" alt="请求"></p><p><img src="https://i.loli.net/2021/01/29/IWtBs5RPz7noXOw.png" alt="返回值"></p>]]></content>
      
      
      <categories>
          
          <category> 强智教务系统API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 强智 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>强智教务系统API</title>
      <link href="2021/01/28/QZAPI/"/>
      <url>2021/01/28/QZAPI/</url>
      
        <content type="html"><![CDATA[<p>打算写一些文章来记录一下强智教务系统的API，本人所在学校采用湖南强智教务系统，理论上这些API与所有采用强智教务系统的学校兼容。</p><ol><li><a href="https://yaaannn.cn/2021/01/29/QZAPI-authUser/">强智教务系统API-authUser</a></li><li><a href="https://yaaannn.cn/2021/02/03/QZAPI-getCurrentTime/">强智教务系统API-getCurrentTime</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 强智教务系统API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 强智 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown简明手册(持续更新)</title>
      <link href="2021/01/23/markdown/"/>
      <url>2021/01/23/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="1-关于-Markdown"><a href="#1-关于-Markdown" class="headerlink" title="1. 关于 Markdown"></a>1. 关于 Markdown</h1><h2 id="1-1-介绍"><a href="#1-1-介绍" class="headerlink" title="1.1 介绍"></a>1.1 介绍</h2><p><a href="https://baike.baidu.com/item/markdown" title="百度百科: Markdown">百度百科: Markdown</a></p><blockquote><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的 XHTML（或者 HTML）文档”。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p></blockquote><h2 id="1-2-为什么选择-Markdown"><a href="#1-2-为什么选择-Markdown" class="headerlink" title="1.2 为什么选择 Markdown"></a>1.2 为什么选择 Markdown</h2><ul><li>它基于纯文本，方便修改和共享；</li><li>几乎可以在所有的文本编辑器中编写；</li><li>有众多编程语言的实现，以及应用的相关扩展；</li><li>在 <a href="https://github.com/">GitHub</a> 等网站中有很好的应用；</li><li>很容易转换为 HTML 文档或其他格式；</li><li>适合用来编写文档、记录笔记、撰写文章。</li></ul><h2 id="1-3-兼容-HTML"><a href="#1-3-兼容-HTML" class="headerlink" title="1.3 兼容 HTML"></a>1.3 兼容 HTML</h2><p>Markdown 完全兼容 HTML 语法，可以直接在 Markdown 文档中插入 HTML 内容：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span></code></pre><p>这段代码会变成下面的样子：</p><table>  <tr>    <td>1</td>    <td>2</td>  </tr>  <tr>    <td>3</td>    <td>4</td>  </tr></table><h2 id="1-4-第一个-Markdown-文档"><a href="#1-4-第一个-Markdown-文档" class="headerlink" title="1.4 第一个 Markdown 文档"></a>1.4 第一个 Markdown 文档</h2><p>HelloMarkdown.md</p><p>打开你熟悉的文本编辑器（如 <a href="https://code.visualstudio.com/">Visual Studio Code</a>），新建一个 ‘HelloMarkdown.md’ 文件，写入下面的内容，并保存：</p><pre class=" language-markdown"><code class="language-markdown">Hello Markdown</code></pre><h1 id="2-基础语法"><a href="#2-基础语法" class="headerlink" title="2. 基础语法"></a>2. 基础语法</h1><p>几乎所有 Markdown 应用程序都支持 John Gruber 原始设计文档中列出的 Markdown 基本语法。</p><h2 id="2-1-段落与换行"><a href="#2-1-段落与换行" class="headerlink" title="2.1 段落与换行"></a>2.1 段落与换行</h2><p>1. 段落的前后必须是空行：</p><p>空行指的是行内什么都没有，或者只有空白符（空格或制表符）</p><p>相邻两行文本，如果中间没有空行<br>会显示在一行中（换行符被转换为空格）</p><p>2. 如果需要在段落内加入换行：</p><p>可以在前一行的末尾加入至少两个空格<br>然后换行写其它的文字</p><p>3. Markdown 中的多数区块都需要在两个空行之间。</p><h2 id="2-2-标题"><a href="#2-2-标题" class="headerlink" title="2.2 标题"></a>2.2 标题</h2><h3 id="2-2-1-Setext-形式"><a href="#2-2-1-Setext-形式" class="headerlink" title="2.2.1 Setext 形式"></a>2.2.1 Setext 形式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token title important">H1<span class="token punctuation">====</span></span><span class="token title important">H2<span class="token punctuation">----</span></span></code></pre><blockquote><p><code>=</code> 和 <code>-</code> 的数量是没有限制的。通常的做法是使其和标题文本的长度相同，这样看起来比较舒服。或者可以像我一样，用四个 <code>-</code> 或 <code>=</code>。<br>注意：Setext 形式只支持 <code>h1</code> 和 <code>h2</code> 两种标题。</p></blockquote><h3 id="2-2-2-Atx-形式"><a href="#2-2-2-Atx-形式" class="headerlink" title="2.2.2 Atx 形式"></a>2.2.2 Atx 形式</h3><p>可以用 <code>#</code> 包括文本，<code>#</code>的个数代表标题的级数：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">####</span> H4</span><span class="token title important"><span class="token punctuation">#####</span> H5</span></code></pre><h2 id="2-3-引用"><a href="#2-3-引用" class="headerlink" title="2.3 引用"></a>2.3 引用</h2><h3 id="2-3-1-引用内容"><a href="#2-3-1-引用内容" class="headerlink" title="2.3.1 引用内容"></a>2.3.1 引用内容</h3><p>在段落或其他内容前使用 <code>&gt;</code> 符号，就可以将这段内容标记为 ‘引用’ 的内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>引用内容</code></pre><blockquote><p>引用内容</p></blockquote><h3 id="2-3-2-多行引用"><a href="#2-3-2-多行引用" class="headerlink" title="2.3.2 多行引用"></a>2.3.2 多行引用</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>多行引用<span class="token blockquote punctuation">></span>可以在每行前加 <span class="token code keyword">`>`</span></code></pre><blockquote><p>多行引用<br>可以在每行前加 <code>&gt;</code></p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>如果仅在第一行使用 <span class="token code keyword">`>`</span>，后面相邻的行即使省略 <span class="token code keyword">`>`</span>，也会变成引用内容</code></pre><blockquote><p>如果仅在第一行使用 <code>&gt;</code>，<br>后面相邻的行即使省略 <code>&gt;</code>，也会变成引用内容</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>如果引用内容需要换行，  <span class="token blockquote punctuation">></span>可以在行尾添加两个空格<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span>或者在引用内容中加一个空行</code></pre><blockquote><p>如果引用内容需要换行，<br>可以在行尾添加两个空格</p><p>或者在引用内容中加一个空行</p></blockquote><h3 id="2-3-3-嵌套引用"><a href="#2-3-3-嵌套引用" class="headerlink" title="2.3.3 嵌套引用"></a>2.3.3 嵌套引用</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>也可以在引用中<span class="token blockquote punctuation">>></span>使用嵌套的引用</code></pre><blockquote><p>也可以在引用中</p><blockquote><p>使用嵌套的引用</p></blockquote></blockquote><h3 id="2-3-4-其他引用"><a href="#2-3-4-其他引用" class="headerlink" title="2.3.4 其他引用"></a>2.3.4 其他引用</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span>在引用中可以使用使用其他任何 <span class="token italic"><span class="token punctuation">*</span>Markdown<span class="token punctuation">*</span></span> 语法</code></pre><blockquote><p>在引用中可以使用使用其他任何 <em>Markdown</em> 语法</p></blockquote><h2 id="2-4-列表"><a href="#2-4-列表" class="headerlink" title="2.4 列表"></a>2.4 列表</h2><h3 id="2-4-1-无序列表"><a href="#2-4-1-无序列表" class="headerlink" title="2.4.1 无序列表"></a>2.4.1 无序列表</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">*</span> 可以使用 <span class="token code keyword">`*`</span> 作为标记<span class="token list punctuation">+</span> 也可以使用 <span class="token code keyword">`+`</span><span class="token list punctuation">-</span> 或者 <span class="token code keyword">`-`</span></code></pre><ul><li>可以使用 <code>*</code> 作为标记</li></ul><ul><li>也可以使用 <code>+</code></li></ul><ul><li>或者 <code>-</code></li></ul><h3 id="2-4-2-有序列表"><a href="#2-4-2-有序列表" class="headerlink" title="2.4.2 有序列表"></a>2.4.2 有序列表</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 有序列表以数字和 <span class="token code keyword">`.`</span> 开始；<span class="token list punctuation">3.</span> 数字的序列并不会影响生成的列表序列；<span class="token list punctuation">4.</span> 但仍然推荐按照自然顺序（1.2.3...）编写。</code></pre><ol><li>有序列表以数字和 <code>.</code> 开始；</li><li>数字的序列并不会影响生成的列表序列；</li><li>但仍然推荐按照自然顺序（1.2.3…）编写。</li></ol><h3 id="2-4-3-嵌套的列表"><a href="#2-4-3-嵌套的列表" class="headerlink" title="2.4.3 嵌套的列表"></a>2.4.3 嵌套的列表</h3><p>嵌套是需要缩进一个制表符或四个空格</p><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> 第一层  <span class="token list punctuation">+</span> 1-1  <span class="token list punctuation">+</span> 1-2<span class="token list punctuation">2.</span> 无序列表和有序列表可以随意相互嵌套  <span class="token list punctuation">1.</span> 2-1  <span class="token list punctuation">2.</span> 2-2</code></pre><ol><li>第一层<br>　　+ 1-1<br>　　+ 1-2</li><li>无序列表和有序列表可以随意相互嵌套<br>　　1. 2-1<br>　　2. 2-2</li><li>第三层</li></ol><h3 id="2-4-4-语法和用法"><a href="#2-4-4-语法和用法" class="headerlink" title="2.4.4 语法和用法"></a>2.4.4 语法和用法</h3><ol><li>无序列表项的开始是：<code>符号 空格</code>；</li><li>有序列表项的开始是：<code>数字.空格</code>；</li><li>空格至少为一个，多个空格将被解析为一个；</li><li>如果仅需要在行前显示<code>数字</code>和 <code>.</code>可以使用：<code>数字\.</code> 来取消显示为列表（转移符号）</li></ol><h2 id="2-5-代码"><a href="#2-5-代码" class="headerlink" title="2.5 代码"></a>2.5 代码</h2><h3 id="2-5-1-代码块"><a href="#2-5-1-代码块" class="headerlink" title="2.5.1 代码块"></a>2.5.1 代码块</h3><p>可以使用缩进来插入代码块，代码块前后需要有至少一个空行，且每行代码前需要有至少一个 Tab 或四个空格</p><pre><code>&lt;html&gt; // Tab开头    &lt;title&gt;Markdown&lt;/title&gt;&lt;/html&gt; // 四个空格开头</code></pre><h3 id="2-5-2-行内代码"><a href="#2-5-2-行内代码" class="headerlink" title="2.5.2 行内代码"></a>2.5.2 行内代码</h3><p>可以通过 ``，插入行内代码（` 是 <code>Tab</code> 键上边、数字 <code>1</code> 键左侧的那个按键）：</p><p>例如 <code>&lt;title&gt;Markdown&lt;/title&gt;</code></p><h2 id="2-6-分隔线"><a href="#2-6-分隔线" class="headerlink" title="2.6 分隔线"></a>2.6 分隔线</h2><p>1. 可以在一行中使用三个或更多的 <code>*</code>、<code>-</code> 或 <code>_</code> 来添加分隔线：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">***</span><span class="token hr punctuation">------</span><span class="token italic"><span class="token punctuation">_</span><span class="token punctuation">_</span><span class="token punctuation">_</span></span></code></pre><hr><hr><hr><p>2. 多个字符之间可以有空格（空白符），但不能有其他字符：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token hr punctuation">* * *</span><span class="token hr punctuation">- - -</span></code></pre><hr><hr><h2 id="2-7-超链接"><a href="#2-7-超链接" class="headerlink" title="2.7 超链接"></a>2.7 超链接</h2><h3 id="2-7-1-行内式"><a href="#2-7-1-行内式" class="headerlink" title="2.7.1 行内式"></a>2.7.1 行内式</h3><p>格式为 <code>[link text](URL &#39;title text&#39;)</code>。</p><p>① 普通链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[YAAANNN](https://yaaannn.cn/)</span></code></pre><p><a href="https://yaaannn.cn/">YAAANNN</a></p><p>② 指向本地文件的链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[icon.png](./images/icon.png)</span></code></pre><p><a href="./images/icon.png">icon.png</a></p><p>③ 包含 ‘title’ 的链接:</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[YAAANNN](https://yaaannn.cn/ <span class="token string">"YAAANNN"</span>)</span></code></pre><p><a href="https://yaaannn.cn/" title="YAAANNN">YAAANNN</a></p><blockquote><p>title 使用 ‘ 或 “ 都是可以的。</p></blockquote><h3 id="2-7-2-参考式"><a href="#2-7-2-参考式" class="headerlink" title="2.7.2 参考式"></a>2.7.2 参考式</h3><p>参考式链接的写法相当于行内式拆分成两部分，并通过一个 <em>识别符</em> 来连接两部分。参考式能尽量保持文章结构的简单，也方便统一管理 URL。</p><p>首先，定义链接：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url">[YAAANNN][<span class="token variable">link</span>]</span></code></pre><p><a href="https://yaaannn.cn/" title="YAAANNN">YAAANNN</a></p><p>第二个方括号内为链接独有的 <em>识别符</em>，可以是字母、数字、空白或标点符号。识别符是 <em>不区分大小写</em> 的；</p><p>然后定义链接内容：</p><pre class=" language-markdown"><code class="language-markdown"><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">link</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://yaaannn.cn/ <span class="token string">"YAAANNN"</span></span></code></pre><p>其格式为：<code>[识别符]: URL &#39;title&#39;</code>。</p><blockquote><p>其中，URL可以使用 &lt;&gt; 包括起来，title 可以使用 “”、’’、() 包括（考虑到兼容性，建议使用引号），title 部分也可以换行来写；</p></blockquote><blockquote><p>链接内容的定义可以放在同一个文件的 <em>任意位置</em>；<br>参考式相对于行内式有一个明显的优点，就是可以在多个不同的位置引用同一个 URL。</p></blockquote><h3 id="2-7-2-自动链接"><a href="#2-7-2-自动链接" class="headerlink" title="2.7.2 自动链接"></a>2.7.2 自动链接</h3><p>使用 <code>&lt;&gt;</code> 包括的 URL 或邮箱地址会被自动转换为超链接：</p><pre class=" language-markdown"><code class="language-markdown">&lt;https://yaaannn.cn/>&lt;1460185042@qq.com></code></pre><p><a href="https://yaaannn.cn/">https://yaaannn.cn/</a></p><p><a href="mailto:&#x31;&#52;&#x36;&#48;&#x31;&#56;&#x35;&#x30;&#52;&#50;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;">&#x31;&#52;&#x36;&#48;&#x31;&#56;&#x35;&#x30;&#52;&#50;&#64;&#x71;&#113;&#x2e;&#99;&#111;&#x6d;</a></p><p>该方式适合行内较短的链接，会使用 URL 作为链接文字。邮箱地址会自动编码，以逃避抓取机器人。</p><h2 id="2-8-图像"><a href="#2-8-图像" class="headerlink" title="2.8 图像"></a>2.8 图像</h2><p>插入图片的语法和插入超链接的语法基本一致，只是在最前面多一个 <code>!</code>。也分为行内式和参考式两种。</p><h3 id="2-8-1-行内式"><a href="#2-8-1-行内式" class="headerlink" title="2.8.1 行内式"></a>2.8.1 行内式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![Code](https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png <span class="token string">"Social Coding"</span>)</span></code></pre><p><img src="https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png" alt="Code" title="Social Coding"></p><p>方括号中的部分是图片的替代文本，括号中的 ‘title’ 部分和链接一样，是可选的。</p><h3 id="2-8-2-参考式"><a href="#2-8-2-参考式" class="headerlink" title="2.8.2 参考式"></a>2.8.2 参考式</h3><pre class=" language-markdown"><code class="language-markdown"><span class="token url">![Code][<span class="token variable">code</span>]</span><span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">code</span><span class="token punctuation">]</span><span class="token punctuation">:</span> https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png <span class="token string">"Social Coding"</span></span></code></pre><p><img src="https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png" alt="Code" title="Social Coding"></p><h3 id="2-8-3-指定图片的显示大小"><a href="#2-8-3-指定图片的显示大小" class="headerlink" title="2.8.3 指定图片的显示大小"></a>2.8.3 指定图片的显示大小</h3><p>Markdown 不支持指定图片的显示大小，不过可以通过直接插入<code>&lt;img /&gt;</code>标签来指定相关属性：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Code<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Social Coding<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>160<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>90<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre><img src="https://i.loli.net/2021/01/24/eypsvKVmGIHfoqt.png" alt="Code" title="Social Coding" width="160" height="90" /><h2 id="2-9-强调"><a href="#2-9-强调" class="headerlink" title="2.9 强调"></a>2.9 强调</h2><h3 id="2-9-1-斜体"><a href="#2-9-1-斜体" class="headerlink" title="2.9.1 斜体"></a>2.9.1 斜体</h3><p>使用 <code>* *</code> 或 <code>_ _</code> 包括的文本会被转换为斜体：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token italic"><span class="token punctuation">*</span>演示<span class="token punctuation">*</span></span> 的 <span class="token italic"><span class="token punctuation">_</span>文本<span class="token punctuation">_</span></span></code></pre><p>这是用来 <em>演示</em> 的 <em>文本</em></p><h3 id="2-9-2-粗体"><a href="#2-9-2-粗体" class="headerlink" title="2.9.2 粗体"></a>2.9.2 粗体</h3><p>使用 <code>** **</code> 或 <code>__ __</code> 包括的文本会被转换为 <code>&lt;strong&gt;&lt;/strong&gt;</code>，通常表现为加粗：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token bold"><span class="token punctuation">**</span>演示<span class="token punctuation">**</span></span> 的 <span class="token bold"><span class="token punctuation">__</span>文本<span class="token punctuation">__</span></span></code></pre><p>这是用来 <strong>演示</strong> 的 <strong>文本</strong></p><h3 id="2-9-3-其他说明"><a href="#2-9-3-其他说明" class="headerlink" title="2.9.3 其他说明"></a>2.9.3 其他说明</h3><p>1. 用来包括文本的 <code>*</code> 或 <code>_</code> 内侧不能有空白，否则 <code>*</code> 和 <code>_</code> 将不会被转换（不同的实现会有不同的表现）：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 <span class="token italic"><span class="token punctuation">*</span> 演示<span class="token punctuation">*</span></span> 的 <span class="token italic"><span class="token punctuation">_</span>文本 <span class="token punctuation">_</span></span></code></pre><p>这是用来 * 演示* 的 _文本 _</p><p>2. 如果需要在文本中显示成对的 <code>*</code> 或 <code>_</code>，可以在符号前加入 <code>\</code> 即可：</p><pre class=" language-markdown"><code class="language-markdown">这是用来 \*演示\* 的 \_文本\_</code></pre><p>这是用来 *演示* 的 _文本_</p><p>3. <code>*</code>、<code>**</code>、<code>_</code> 和 <code>__</code> 都必须 <em>成对使用</em> 。</p><h2 id="2-10-转义字符"><a href="#2-10-转义字符" class="headerlink" title="2.10 转义字符"></a>2.10 转义字符</h2><p>以下列出的字符都可以通过使用反斜杠字符<code>\</code>从而达到转义目的。</p><table><thead><tr><th>字符</th><th>名称</th></tr></thead><tbody><tr><td>\</td><td>反斜杠</td></tr><tr><td>`</td><td>反引号</td></tr><tr><td>*</td><td>星号</td></tr><tr><td>_</td><td>下划线</td></tr><tr><td>{}</td><td>花括号</td></tr><tr><td>[]</td><td>方括号</td></tr><tr><td>()</td><td>圆括号或括号</td></tr><tr><td>#</td><td>井号</td></tr><tr><td>+</td><td>加号</td></tr><tr><td>-</td><td>减号或连字符</td></tr><tr><td>.</td><td>句点</td></tr><tr><td>!</td><td>感叹号</td></tr><tr><td>|</td><td>管道符</td></tr></tbody></table><h1 id="3-进阶语法"><a href="#3-进阶语法" class="headerlink" title="3. 进阶语法"></a>3. 进阶语法</h1><h2 id="3-1-表格"><a href="#3-1-表格" class="headerlink" title="3.1 表格"></a>3.1 表格</h2><h3 id="3-1-1-单元格和表头"><a href="#3-1-1-单元格和表头" class="headerlink" title="3.1.1 单元格和表头"></a>3.1.1 单元格和表头</h3><p>使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行：</p><pre class=" language-markdown"><code class="language-markdown">name   | age\----  | ---YAAANNN| 18Github | 13</code></pre><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>YAAANNN</td><td>18</td></tr><tr><td>Github</td><td>13</td></tr></tbody></table><p>为了美观，可以使用空格对齐不同行的单元格，并在左右两侧都使用 <code>|</code> 来标记单元格边界：</p><pre class=" language-markdown"><code class="language-markdown">|    name    | age || ---------- | --- || YAAANNN    |  18 || Github     |  13 |</code></pre><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>YAAANNN</td><td>18</td></tr><tr><td>Github</td><td>13</td></tr></tbody></table><blockquote><p>为了使 Markdown 更清晰，<code>|</code> 和 <code>-</code> 两侧需要至少有一个空格（最左侧和最右侧的 <code>|</code> 外就不需要了）。</p></blockquote><h3 id="3-1-2-对齐"><a href="#3-1-2-对齐" class="headerlink" title="3.1.2 对齐"></a>3.1.2 对齐</h3><p>在表头下方的分隔线标记中加入 <code>:</code>，即可标记下方单元格内容的对齐方式：</p><ul><li><code>:---</code> 代表左对齐</li><li><code>:--:</code> 代表居中对齐</li><li><code>---:</code> 代表右对齐</li></ul><pre class=" language-markdown"><code class="language-markdown">| left | center | right || :--- | :----: | ----: || aaaa | bbbbbb | ccccc || a    | b      | c     |</code></pre><table><thead><tr><th align="left">left</th><th align="center">center</th><th align="right">right</th></tr></thead><tbody><tr><td align="left">aaaa</td><td align="center">bbbbbb</td><td align="right">ccccc</td></tr><tr><td align="left">a</td><td align="center">b</td><td align="right">c</td></tr></tbody></table><blockquote><p>如果不使用对齐标记，单元格中的内容默认左对齐；表头单元格中的内容会一直居中对齐（不同的实现可能会有不同表现）。</p></blockquote><h3 id="3-1-3-插入其他内容"><a href="#3-1-3-插入其他内容" class="headerlink" title="3.1.3 插入其他内容"></a>3.1.3 插入其他内容</h3><p>表格中可以插入其他 Markdown 中的行内标记：</p><pre class=" language-markdown"><code class="language-markdown">|     name     | age |             blog                || ------------ | --- | ------------------------------- || <span class="token italic"><span class="token punctuation">_</span>YAAANNN<span class="token punctuation">_</span></span>    |  18 | <span class="token url">[YAAANNN](https://yaaannn.cn)</span>   || <span class="token bold"><span class="token punctuation">__</span>Github<span class="token punctuation">__</span></span>   |  13 | <span class="token url">[gthub](https://github.com)</span>     |</code></pre><table><thead><tr><th>name</th><th>age</th><th>blog</th></tr></thead><tbody><tr><td><em>YAAANNN</em></td><td>18</td><td><a href="https://yaaannn.cn/">YAAANNN</a></td></tr><tr><td><strong>Github</strong></td><td>13</td><td><a href="https://github.com/">gthub</a></td></tr></tbody></table><h2 id="3-2-围栏代码块和语法高亮"><a href="#3-2-围栏代码块和语法高亮" class="headerlink" title="3.2 围栏代码块和语法高亮"></a>3.2 围栏代码块和语法高亮</h2><h3 id="3-2-1-围栏代码块"><a href="#3-2-1-围栏代码块" class="headerlink" title="3.2.1 围栏代码块"></a>3.2.1 围栏代码块</h3><p>根据 Markdown 解析器或编辑器的不同，代码块的前后可以使用三个反引号（```）来标记围栏代码块。</p><ul><li>在需要高亮的代码块的前一行及后一行使用三个反引号 ```（~ 键）</li><li>同时第一行反引号后面，输入代码块所使用的语言，实现代码高亮。</li></ul><pre><code>//反斜杠为转义字符，具体使用时不要写出\```int main()&#123;    printf(&quot;Hello Markdown&quot;);    return 0;&#125;\```</code></pre><pre><code>int main()&#123;    printf(&quot;Hello Markdown&quot;);    return 0;&#125;</code></pre><h3 id="3-2-2-语法高亮"><a href="#3-2-2-语法高亮" class="headerlink" title="3.2.2 语法高亮"></a>3.2.2 语法高亮</h3><p>许多 Markdown 解析器都支持围栏代码块的语法高亮功能。此功能允许你为编写代码所用的编程语言添加带颜色的语法高亮显示。如需添加语法高亮，请在围栏代码块前的反引号旁指定所用的编程语言。</p><pre class=" language-c"><code class="language-c"><span class="token comment" spellcheck="true">//反斜杠为转义字符，具体使用时不要写出</span>\```<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello Markdown"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>\```</code></pre><pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello Markdown"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好</title>
      <link href="2021/01/21/hello-world/"/>
      <url>2021/01/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>$f(x_1,x_2,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2$<br>$$(中间写正文)$$</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-cpp"><code class="language-cpp"><span class="token macro property">#<span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cout<span class="token operator">&lt;&lt;</span><span class="token string">"hello world"</span><span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
